{
    attributes = (
        {
            allowsNull = N; 
            columnName = "FANN_KEY"; 
            externalType = NUMBER; 
            name = fannKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "MRUX_BONIFIABLE"; 
            externalType = NUMBER; 
            name = mrueBonifiable; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "MRUX_COEFFICIENT"; 
            externalType = NUMBER; 
            name = mrueCoefficient; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = N; 
            columnName = "MRUX_COMPTABILISABLE"; 
            externalType = NUMBER; 
            name = mrueComptabilisable; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "MRUX_KEY"; 
            externalType = NUMBER; 
            name = mrueKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "MRUX_NOTE_BASE"; 
            externalType = NUMBER; 
            name = mrueNoteBase; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "MRUX_NOTE_ELIMINATION"; 
            externalType = NUMBER; 
            name = mrueNoteElimination; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = N; 
            columnName = "MRUX_NOTE_OBTENTION"; 
            externalType = NUMBER; 
            name = mrueNoteObtention; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = N; 
            columnName = "MRUX_ORDRE"; 
            externalType = NUMBER; 
            name = mrueOrdre; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "MRUX_KEY"; 
            externalType = NUMBER; 
            name = mruxKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "MSEM_KEY"; 
            externalType = NUMBER; 
            name = msemKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "MUX_KEY"; 
            externalType = NUMBER; 
            name = mueKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "MUX_KEY"; 
            externalType = NUMBER; 
            name = muxKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }
    ); 
    attributesUsedForLocking = (mruxKey); 
    className = EOGenericRecord; 
    classProperties = (
        fannKey, 
        mrueBonifiable, 
        mrueCoefficient, 
        mrueComptabilisable, 
        mrueKey, 
        mrueNoteBase, 
        mrueNoteElimination, 
        mrueNoteObtention, 
        mrueOrdre, 
        mruxKey, 
        msemKey, 
        mueKey, 
        muxKey, 
        toScolMaquetteSemestre, 
        toScolMaquetteUe
    ); 
    externalName = "SCOLARITE.SCOL_MAQUETTE_REPARTITION_UE_X"; 
    fetchSpecificationDictionary = {}; 
    name = ScolMaquetteRepartitionUeX; 
    primaryKeyAttributes = (mruxKey); 
    relationships = (
        {
            destination = ScolMaquetteSemestre; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = msemKey; sourceAttribute = msemKey; }); 
            name = toScolMaquetteSemestre; 
        }, 
        {
            destination = ScolMaquetteUeX; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = muxKey; sourceAttribute = muxKey; }); 
            name = toScolMaquetteUe; 
        }
    ); 
}
