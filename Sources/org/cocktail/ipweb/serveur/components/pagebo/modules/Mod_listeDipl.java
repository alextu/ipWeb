package org.cocktail.ipweb.serveur.components.pagebo.modules;
// Generated by the WOLips TemplateEngine Plug-in at 13 nov. 2006 22:44:05


import java.util.Enumeration;

import org.cocktail.fwkcktlwebapp.server.components.CktlWebComponent;
import org.cocktail.ipweb.serveur.Session;
import org.cocktail.ipweb.serveur.components.onglets.FonctionsCtrlr;
import org.cocktail.ipweb.serveur.components.onglets.OngletsCtrlr;
import org.cocktail.ipweb.serveur.controlleur.DownloadFic;
import org.cocktail.ipweb.serveur.controlleur.StatDiplomeCtrlr;

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.eocontrol.EOEditingContext;
import com.webobjects.eocontrol.EOFetchSpecification;
import com.webobjects.eocontrol.EOGenericRecord;
import com.webobjects.eocontrol.EOQualifier;
import com.webobjects.eocontrol.EOSortOrdering;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSMutableArray;
import com.webobjects.foundation.NSNotification;
import com.webobjects.foundation.NSNotificationCenter;
import com.webobjects.foundation.NSSelector;

public class Mod_listeDipl extends CktlWebComponent {

	// fonctions � g�rer (pour ce module du BackOffice)
	private static String MODIF_IP_ETUD = "CONVERT_IP";
	private static String[] listeFonctions = new String[] {MODIF_IP_ETUD};
	private FonctionsCtrlr ctlFonctions;

    public String nomFormChoixPariteSem = "choixPariteSem";
    
    public NSArray listeStatDiplCt;		// pour le WORepetition
	public StatDiplomeCtrlr laStatDipl;	// var de parcours
	
	private Session maSess;
	private NSArray listeDipl;
	private String cptLogin;
	
    private boolean afficheSemetresImpairs;	// si vrai, on affiche les semestres impairs...

    public Mod_listeDipl(WOContext context) {
        super(context);
        
        maSess = (Session)session();
        System.out.println("ZZZZZZZZZZZZZZZZZZZZZZZZZ  init mod listeDipl");
        OngletsCtrlr mesOngCt = maSess.getMesOnglets();
        ctlFonctions = new FonctionsCtrlr(mesOngCt,listeFonctions);

        afficheSemetresImpairs = true;
        
        cptLogin = mesOngCt.cptLogin();	// on obtient le code de l'utilisateur dans ScolPeda depuis 
        				// le controleur d'onglet (récupéré lors de son init)
        chargerListeDiplome(false);
        
        // s'enregistrer pour les notifs (chgt d'année en cours)
        NSNotificationCenter.defaultCenter().addObserver(this,	// on doit me prévenir moi-même !
        	new NSSelector("chgtAnnee",							// via cette méthode
        	new Class [] {NSNotification.class}),				// argument obligatoire !!!
        	"chgtAnneeEnCours",									// la signature de la notif qui me plait
			(Session)this.session());					// instance de celui qui la poste !
  }
    

    // Si parit� = pair alors afficher semestres impairs et inversement...
    public WOComponent changerPariteSemestres() {
    	refetchListeDiplome();
        return null;
    }
    
    
    public String getPariteSelected() {
	if (afficheSemetresImpairs) return "Impairs";
	else return "Pairs";
    }


    public void setPariteSelected(String newPariteSelected) {
	if (newPariteSelected.compareTo("Pairs")==0) afficheSemetresImpairs = false;
	else afficheSemetresImpairs = true;
    }
    
    public String fctSubmitChoixPariteSem() {
        return "document."+nomFormChoixPariteSem+".submit();";
    }

    // Les enseignants n'ont pas le droit de faire les transferts...
    public boolean pasDeDroit() {
    	return (((Session)session()).getIndividuCtrlr().estUnEnseignant());
    }
    
    // Au cas ou personne n'ait encore fait d'IP ! 
    public boolean pasEncoreDIp() {
    	if (listeStatDiplCt == null || listeStatDiplCt.count() == 0)
    		return true;
    	else return false;
    }
    
    

    //  -----------------------------------------------------    
    //  ------------- Reponse aux notifications -------------
    //  -----------------------------------------------------    
    
    /// Un changement d'année vient d'avoir lieu...
    public void chgtAnnee(NSNotification laNotif) {
    	refetchListeDiplome();
    }
    
    
    private void chargerListeDiplome(boolean refetch) {
 		NSArray bindings = new NSArray(new Object[] {cptLogin,new Integer(maSess.getAnneeEnCours()), 
 				new Integer(afficheSemetresImpairs?1:0)});
		EOQualifier qualifier = EOQualifier.qualifierWithQualifierFormat(
				"cptLogin = %@ and fannKey = %@ and pariteSem = %@", bindings);

		EOSortOrdering ordreDip = EOSortOrdering.sortOrderingWithKey("diplome",EOSortOrdering.CompareAscending);
		EOSortOrdering ordreSem = EOSortOrdering.sortOrderingWithKey("msemOrdre",EOSortOrdering.CompareAscending);
    	
		NSArray sortOrderings = new NSArray(new Object[] {ordreDip,ordreSem});
		
		EOFetchSpecification fetchSpec = new EOFetchSpecification("VDiplomeParcoursSem",qualifier, sortOrderings);
		if (refetch) fetchSpec.setRefreshesRefetchedObjects(true);
		
		EOEditingContext ec = maSess.defaultEditingContext();

		listeDipl = ec.objectsWithFetchSpecification(fetchSpec);  
		
		// cr�er une structure de contr�leurs
		
		if (listeDipl != null && listeDipl.count()>0) {
			NSMutableArray listeCt = new NSMutableArray();
			Enumeration e = listeDipl.objectEnumerator();
			while (e.hasMoreElements()) {
				EOGenericRecord statDipl = (EOGenericRecord)e.nextElement();
				String diplAnnee = statDipl.valueForKey("fspnKey")+"-"+statDipl.valueForKey("fhabNiveau");
				// voir quel est le droit n�cessaire pour convertir les IP...
				int droit = ctlFonctions.droitsPourFonctionEtDiplome("CONVERT_IP",diplAnnee);
				listeCt.addObject(new StatDiplomeCtrlr(maSess,statDipl,droit));
			}
			listeStatDiplCt = listeCt.immutableClone();
		}
    }
    
    public WOComponent refetchListeDiplome() {
		chargerListeDiplome(true);
		return null;
    }
    
    // Appel d'une page traffiqu�e pour renvoyer le fichier, 
    // et non le contenu HTML d'une nouvelle page !
    public DownloadFic imprListeIPincompletes()
    {
	DownloadFic nextPage;
	nextPage = (DownloadFic)(pageWithName("DownloadFic"));
	// On passe le photo controleur...
	boolean res = nextPage.initDownloadPDF(laStatDipl.imprListeIPincompletes(),"ChoixIncomplets.pdf");
	if (!res) return null;
	else return nextPage;
    }

}