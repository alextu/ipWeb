package org.cocktail.ipweb.serveur.components.page.cadres;
//Generated by the WOLips TemplateEngine Plug-in at 29 sept. 2006 11:16:41

import org.cocktail.fwkcktlwebapp.server.components.CktlWebComponent;
import org.cocktail.ipweb.serveur.PageLogOut;
import org.cocktail.ipweb.serveur.Session;
import org.cocktail.ipweb.serveur.controlleur.IndividuCtrlr;
import org.cocktail.ipweb.serveur.controlleur.InscriptionCtrlr;
import org.cocktail.ipweb.serveur.controlleur.PhotoCtrlr;

import com.webobjects.appserver.WOComponent;
import com.webobjects.appserver.WOContext;
import com.webobjects.foundation.NSNotification;
import com.webobjects.foundation.NSNotificationCenter;
import com.webobjects.foundation.NSSelector;

public class Identite extends CktlWebComponent {
    protected IndividuCtrlr individuCt;
    protected InscriptionCtrlr inscCt;
    public PhotoCtrlr monPhCtrlr;
    
    protected boolean telEnCoursMAJ;

//    private String numeroTelEtudiant;	// variable pour le composant Ajax !

//  public LRUserInfo user;

    public Identite(WOContext context) {
    	super(context);
//  	numeroTelEtudiant = null;	// TODO : � changer par un acc�s � la base !

    	monPhCtrlr = ((Session)cktlSession()).getPhotoCtrlr();

    	// s'enregistrer pour les notifs (chgt d'tudiant en mode "BackOffice")
    	NSNotificationCenter.defaultCenter().addObserver(this,	// on doit me pr�venir moi-m�me !
    			new NSSelector("changeEtudiant",		// via cette m�thode
    					new Class [] {NSNotification.class}),		// argument obligatoire !!!
    					"chgtEtudiant",					// la signature de la notif qui m�plait
    					(Session)this.session());			// instance de celui qui la poste !

    	changeEtudiant(null);	// a la premiere construction...
    }

    //	m�thode invoqu�e par notification une fois enregistr� :
    public void changeEtudiant(NSNotification laNotif) {
    	monPhCtrlr.changePhoto();
//  	user = criSession().connectedUserInfo();
    	individuCt = ((Session)cktlSession()).getICEtudiant(); 
    	inscCt = individuCt.monCInsc();
    }    

    public int numeroEtudiant() {
    	return inscCt.numeroEtudiant();
    }

    public String emailEtudiant() {
    	if (individuCt != null )
    		return individuCt.emailEtudiant();
    	else return "";
    }
    

    public String genreInd() {
	if (individuCt.cCivilite().equals("M.")) return "";
	return "e";
    }

    public String getNumeroTelEtudiant() {
	return individuCt.getUserTelEtud();	// TODO : � changer par un acc�s � la base !
    }

    public void setNumeroTelEtudiant(String numeroTelEtudiant) {
	individuCt.setUserTelEtud(numeroTelEtudiant);
//	this.numeroTelEtudiant = individuCt.getUserTelEtud(); 	// pour v�rifs et reparam�trage
//	System.out.println("La nouvelle valeur = "+numeroTelEtudiant);
    }

    public WOComponent deconnexion() {
    	// retour à la page de login et déconnexion !
    	PageLogOut page = (PageLogOut)pageWithName("PageLogOut");
    	session().terminate();
    	return page;
    }

    public boolean chgeTelPossible() {
    	if (((Session)session()).estUnEnseignant())
    		return false;
    	return !(((Session)cktlSession()).dmec() || individuCt.donneePreCandidat());
    }

    // Vrai si dialogue modal en cours
    public boolean dmec() {
    	return ((Session)cktlSession()).dmec();
    }

    // appel� quand on clique sur le bouton..
    public WOComponent ddeMajTel() {
	((Session)session()).demarreDM();
	telEnCoursMAJ = true;
        return null;
    }
        
    public boolean telAttenteMAJ() {
	return (!telEnCoursMAJ);
    }
    
    public boolean visuOkCoord() {
    	if (((Session)session()).estUnEnseignant())
    		return false;
    	else return true;
    }

    public WOComponent validerTel() {
	telEnCoursMAJ = false;
	((Session)session()).arreteDM();
        return null;
    }
    
    public boolean telEnCoursMAJ() {
	return telEnCoursMAJ;
    }
    
    public IndividuCtrlr getIndividuCt() {
		return individuCt;
	}
    
}