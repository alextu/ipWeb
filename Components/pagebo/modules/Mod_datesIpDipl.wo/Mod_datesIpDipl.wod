CRIDatePicker1: CktlAjaxDatePicker {
	dateValue = contenuDateDebut;
	fieldName = "dateDebutIp";
	formName = "FormDetailPeriodes";
}

CRIDatePicker2: CktlAjaxDatePicker {
	dateValue = contenuDateFin;
	fieldName = "dateFinIp";
	formName = "FormDetailPeriodes";
}

Conditional1: WOConditional {
	condition = isDiplChoisi;
}

Conditional10: WOConditional {
	condition = isChangeable;
	negate = true;
}

Conditional11: WOConditional {
	condition = isIpActif;
}

Conditional12: WOConditional {
	condition = isIpActif;
	negate = true;
}

Conditional13: WOConditional {
	condition = isIpActif;
}

Conditional14: WOConditional {
	condition = isIpActif;
}

Conditional15: WOConditional {
	condition = isIpActif;
}

Conditional16: WOConditional {
	condition = isIpActif;
	negate = true;
}

Conditional17: WOConditional {
	condition = isIpActif;
	negate = true;
}

Conditional18: WOConditional {
	condition = isIpActif;
	negate = true;
}

Conditional19: WOConditional {
	condition = recopieDateFinPossible;
}

Conditional2: WOConditional {
	condition = isModifAutorisee;
}

Conditional20: WOConditional {
	condition = affBtAjouterDiplSemIP;
}

Conditional21: WOConditional {
	condition = affBtRetirerDiplSemIP;
}

Conditional22: WOConditional {
	condition = erreurEnCours;
}

Conditional23: WOConditional {
	condition = isDiplChoisi;
}

Conditional24: WOConditional {
	condition = isDialChgtEtat;
}

Conditional25: WOConditional {
	condition = isDialReportDate;
}

Conditional26: WOConditional {
	condition = isModifIpRdbltAutorisee;
}

Conditional28: WOConditional {
	condition = isChangeable;
}

Conditional3: WOConditional {
	condition = semCourantEnModif;
}

Conditional30: WOConditional {
	condition = isDialChgtIpRdblt;
}

Conditional4: WOConditional {
	condition = recopieDateDebutPossible;
}

Conditional5: WOConditional {
	condition = isChangeable;
}

Conditional6: WOConditional {
	condition = semCourantEnModif;
	negate = true;
}

Conditional7: WOConditional {
	condition = semCourantEnModif;
}

Conditional8: WOConditional {
	condition = semCourantEnModif;
}

Conditional9: WOConditional {
	condition = semCourantEnModif;
	negate = true;
}

Form2: WOForm {
	action = changerPariteSemestres;
	name = nomFormChoixPariteSem;
}

FormDetailPeriodes: WOForm {
	multipleSubmit = true;
	name = "FormDetailPeriodes";
}

Generic1: WOGenericContainer {
	class = styleDDIPSem;
	elementName = "SPAN";
}

Generic2: WOGenericContainer {
	class = styleDFIPSem;
	elementName = "SPAN";
}

Generic3: WOGenericContainer {
	class = styleDDIPDom;
	elementName = "SPAN";
}

Generic4: WOGenericContainer {
	class = styleDFIPDom;
	elementName = "SPAN";
}

PopUpMultiDiplSemUe1: PopUpMultiDiplSemUe {
	action = voirDatesDiplome;
	disabled = dialogueModifEnCours;
	eoSelectionne = eoDiplSelected;
	fspnKey = fspnKey;
	msemKey = msemKey;
	msemKeyPc = msemKeyPc;
	mueKey = mueKey;
	typeSelection = 1;
}

RadioButton1: WORadioButton {
	name = "rbParite";
	onChange = fctSubmitChoixPariteSem;
	selection = pariteSelected;
	value = "Impairs";
	disabled = dialogueModifEnCours;
}

RadioButton2: WORadioButton {
	name = "rbParite";
	onChange = fctSubmitChoixPariteSem;
	selection = pariteSelected;
	value = "Pairs";
	disabled = dialogueModifEnCours;
}

Repetition2: WORepetition {
	item = leDiplSemCourant;
	list = listeDiplSem;
}

String1: WOString {
	value = typeRecopieDate;
}

String10: WOString {
	value = semOrdreChgtEtat;
}

String11: WOString {
	value = stDateSource;
}

String12: WOString {
	value = diplomeChoisi;
}

String13: WOString {
	value = diplomeChoisi;
}

String14: WOString {
	value = leDiplSemCourant.autoriseRdblt;
}

String15: WOString {
	value = leDiplSemAutoriseIpEnModif.blocageRedoublantActif;
	escapeHTML = false;
}

String16: WOString {
	value = diplomeChoisi;
}

String17: WOString {
	value = msgConfirmerChgtEtatIpRdblt;
}

String18: WOString {
	value = semOrdreChgtEtat;
}

String2: WOString {
	value = pariteSemestres;
}

String3: WOString {
	value = dateDebutDiplCour;
}

String4: WOString {
	value = libDateDebutDomCour;
}

String5: WOString {
	value = dateFinDiplCour;
}

String6: WOString {
	value = libDateFinDomCour;
}

String7: WOString {
	value = msgIpDiplSemNonChangeable;
}

String8: WOString {
	value = msgErreur;
}

String9: WOString {
	value = msgConfirmerChgtEtat;
}

SubmitButton1: WOSubmitButton {
	action = annulerReporterDate;
	value = "Annuler...";
}

SubmitButton10: WOSubmitButton {
	action = confirmerRetirerDiplSem;
	value = "Confirmer !";
}

SubmitButton11: WOSubmitButton {
	action = annulerRetirerDiplSem;
	value = "Annuler...";
}

SubmitButton12: WOSubmitButton {
	action = changeAutorisationIpRedblt;
	disabled = dialogueModifEnCours;
	value = "*";
	title = "Changer l'�tat de l'autorisation (ou non) en cours pour ce dpl�me et ce semestre.";
}

SubmitButton13: WOSubmitButton {
	action = validerChgtAutoriseIp;
	value = "Confirmer !";
}

SubmitButton14: WOSubmitButton {
	action = annulerChgtAutoriseIp;
	value = "Annuler...";
}

SubmitButton2: WOSubmitButton {
	action = confirmerReporterDate;
	value = "Confirmer !";
}

SubmitButton3: WOSubmitButton {
	action = ModifierDates;
	value = "Modifier dates";
	disabled = dialogueModifEnCours;
}

SubmitButton4: WOSubmitButton {
	action = recopierDatesDebut;
	value = "*";
	title = "Donner cette date de d�but � tous les autres semestres...";
	disabled = dialogueModifEnCours;
}

SubmitButton5: WOSubmitButton {
	action = recopierDatesFin;
	value = "*";
	title = "Donner cette date de fin � tous les autres semestres...";
	disabled = dialogueModifEnCours;
}

SubmitButton6: WOSubmitButton {
	action = validerDates;
	value = "Valider";
}

SubmitButton7: WOSubmitButton {
	action = annulerModifsDates;
	value = "Annuler";
}

SubmitButton8: WOSubmitButton {
	action = ajouterDiplSem;
	value = "+";
	title = "Permettre aux �tudiants de faire leurs IP Web sur ce semestre...";
	disabled = dialogueModifEnCours;
}

SubmitButton9: WOSubmitButton {
	action = retirerDiplSem;
	otherTagString = "test";
	value = "-";
	title = "Interdire aux �tudiants de faire leurs IP Web sur ce semestre...";
	disabled = dialogueModifEnCours;
}

noOrdreSem: WOString {
	value = leDiplSemCourant.msemOrdre;
}