{
    attributes = (
        {
            allowsNull = Y; 
            columnName = "ADR_CIVILITE"; 
            externalType = VARCHAR2; 
            name = adrCivilite; 
            valueClassName = NSString; 
            valueType = S; 
            width = 5; 
        }, 
        {
            allowsNull = Y; 
            columnName = "ADR_NOM"; 
            externalType = VARCHAR2; 
            name = adrNom; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            columnName = "ADR_PRENOM"; 
            externalType = VARCHAR2; 
            name = adrPrenom; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            columnName = "ETUD_NUMERO"; 
            externalType = NUMBER; 
            name = etudNumero; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "FANN_KEY"; 
            externalType = NUMBER; 
            name = fannKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "FSPN_KEY"; 
            externalType = NUMBER; 
            name = fspnKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "IDIPL_ANNEE_SUIVIE"; 
            externalType = NUMBER; 
            name = idiplAnneeSuivie; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "IDIPL_NUMERO"; 
            externalType = NUMBER; 
            name = idiplNumero; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMCOM_LIBELLE"; 
            externalType = VARCHAR2; 
            name = imcomLibelle; 
            valueClassName = NSString; 
            valueType = S; 
            width = 500; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMDIV_LIBELLE1"; 
            externalType = VARCHAR2; 
            name = imdivLibelle1; 
            valueClassName = NSString; 
            valueType = S; 
            width = 200; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMDIV_LIBELLE2"; 
            externalType = VARCHAR2; 
            name = imdivLibelle2; 
            valueClassName = NSString; 
            valueType = S; 
            width = 200; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMDIV_LIBELLE3"; 
            externalType = VARCHAR2; 
            name = imdivLibelle3; 
            valueClassName = NSString; 
            valueType = S; 
            width = 200; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_ABSENCE1"; 
            externalType = NUMBER; 
            name = imrecAbsence1; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_ABSENCE2"; 
            externalType = NUMBER; 
            name = imrecAbsence2; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_BASE"; 
            externalType = NUMBER; 
            name = imrecBase; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrecBaseLibelle; 
            definition = "DECODE(NVL(to_char(imrecBase),' '),' ',' ','( / '||REPLACE(to_char(imrecBase,'990.99'),' ')||' - coef. '||to_char(imrecCoefficient,'90.99')||')')"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrecBaseLibelle; 
            valueClassName = NSString; 
            valueType = S; 
            width = 30; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_COEFFICIENT"; 
            externalType = NUMBER; 
            name = imrecCoefficient; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_DISPENSE"; 
            externalType = NUMBER; 
            name = imrecDispense; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_ETAT"; 
            externalType = NUMBER; 
            name = imrecEtat; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrecLabel; 
            definition = "DECODE(imrecObtention,null,' ',' - ('||imrecObtention||')')"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrecLabel; 
            valueClassName = NSString; 
            valueType = S; 
            width = 205; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_MENTION1"; 
            externalType = NUMBER; 
            name = imrecMention1; 
            precision = 1; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_MENTION2"; 
            externalType = NUMBER; 
            name = imrecMention2; 
            precision = 1; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            definition = "toScolConstanteMentionEc1.cmenLibelle"; 
            externalType = VARCHAR2; 
            name = imrecMentionLibelle1; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            definition = "toScolConstanteMentionEc2.cmenLibelle"; 
            externalType = VARCHAR2; 
            name = imrecMentionLibelle2; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_MOYENNE1"; 
            externalType = NUMBER; 
            name = imrecMoyenne1; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_MOYENNE2"; 
            externalType = NUMBER; 
            name = imrecMoyenne2; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrecNote1; 
            definition = "DECODE(imrecAbsence1,0,DECODE(imrecDispense,4,'Equiv. '||to_char(imrecMoyenne1,'990.99'),5,'Equivalence',6,'V.A.E.',to_char(imrecMoyenne1,'990.99')),toScolConstanteAbsenceEc1.cabsLibelle)"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrecNote1; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrecNote2; 
            definition = "DECODE(imrecAbsence2,0,DECODE(imrecDispense,4,'Equiv. '||to_char(imrecMoyenne2,'990.99'),5,'Equivalence',6,'V.A.E.',to_char(imrecMoyenne2,'990.99')),toScolConstanteAbsenceEc2.cabsLibelle)"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrecNote2; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_OBTENTION"; 
            externalType = VARCHAR2; 
            name = imrecObtention; 
            valueClassName = NSString; 
            valueType = S; 
            width = 200; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_POINT_JURY"; 
            externalType = NUMBER; 
            name = imrecPointJury; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrecPoints1; 
            definition = "NVL(IMREC_POINTS1,DECODE(mrecKey,0,null,0))"; 
            externalType = NUMBER; 
            isReadOnly = Y; 
            name = imrecPoints1; 
            precision = 4; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrecPoints2; 
            definition = "NVL(IMREC_POINTS2,DECODE(mrecKey,0,null,0))"; 
            externalType = NUMBER; 
            isReadOnly = Y; 
            name = imrecPoints2; 
            precision = 4; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_PONDERATION"; 
            externalType = NUMBER; 
            name = imrecPonderation; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMREC_PROMOTION"; 
            externalType = NUMBER; 
            name = imrecPromotion; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_ABSENCE1"; 
            externalType = NUMBER; 
            name = imrsemAbsence1; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_ABSENCE2"; 
            externalType = NUMBER; 
            name = imrsemAbsence2; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_BASE"; 
            externalType = NUMBER; 
            name = imrsemBase; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrsemBaseLibelle1; 
            definition = "DECODE(NVL(to_char(imrsemBase),' '),' ',' ','( / '||REPLACE(to_char(imrsemBase,'9990.99'),' ')||')')"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrsemBaseLibelle1; 
            valueClassName = NSString; 
            valueType = S; 
            width = 20; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrsemBaseLibelle21; 
            definition = "DECODE(NVL(imrsemBase,0),20,' ','Moyenne / 20.00 : '||to_char(((imrsemMoyenne1/imrsemBase)*20.00),'90.99')||'  -  ')"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrsemBaseLibelle21; 
            valueClassName = NSString; 
            valueType = S; 
            width = 30; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrsemBaseLibelle22; 
            definition = "DECODE(NVL(imrsemBase,0),20,' ','Moyenne / 20.00 : '||to_char(((imrsemMoyenne2/imrsemBase)*20.00),'90.99')||'  -  ')"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrsemBaseLibelle22; 
            valueClassName = NSString; 
            valueType = S; 
            width = 30; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrsemBonification; 
            definition = "to_char('')"; 
            externalType = VARCHAR2; 
            name = imrsemBonification; 
            valueClassName = NSString; 
            valueType = S; 
            width = 200; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_DISPENSE"; 
            externalType = NUMBER; 
            name = imrsemDispense; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_ETAT"; 
            externalType = NUMBER; 
            name = imrsemEtat; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrsemLabel; 
            definition = "DECODE(imrsemObtention,null,' ',' - ('||imrsemObtention||')')"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrsemLabel; 
            valueClassName = NSString; 
            valueType = S; 
            width = 205; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_MENTION1"; 
            externalType = NUMBER; 
            name = imrsemMention1; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_MENTION2"; 
            externalType = NUMBER; 
            name = imrsemMention2; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            definition = "toScolConstanteMentionSem1.cmenLibelle"; 
            externalType = VARCHAR2; 
            name = imrsemMentionLibelle1; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            definition = "toScolConstanteMentionSem2.cmenLibelle"; 
            externalType = VARCHAR2; 
            name = imrsemMentionLibelle2; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            definition = "toScolConstanteMentionSem1.cmenAppreciation"; 
            externalType = VARCHAR2; 
            name = imrsemMentionLibelleCourt1; 
            valueClassName = NSString; 
            valueType = S; 
            width = 50; 
        }, 
        {
            allowsNull = Y; 
            definition = "toScolConstanteMentionSem2.cmenAppreciation"; 
            externalType = VARCHAR2; 
            name = imrsemMentionLibelleCourt2; 
            valueClassName = NSString; 
            valueType = S; 
            width = 50; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_MOYENNE1"; 
            externalType = NUMBER; 
            name = imrsemMoyenne1; 
            precision = 6; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_MOYENNE2"; 
            externalType = NUMBER; 
            name = imrsemMoyenne2; 
            precision = 6; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrsemNote1; 
            definition = "DECODE(imrsemAbsence1,0,DECODE(imrsemDispense,4,'Equiv. '||to_char(imrsemMoyenne1,'990.99'),5,'Equivalence',6,'V.A.E.',to_char(imrsemMoyenne1,'990.99')),toScolConstanteAbsenceSem1.cabsLibelle)"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrsemNote1; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrsemNote2; 
            definition = "DECODE(imrsemAbsence2,0,DECODE(imrsemDispense,4,'Equiv. '||to_char(imrsemMoyenne1,'990.99'),5,'Equivalence',6,'V.A.E.',to_char(imrsemMoyenne2,'990.99')),toScolConstanteAbsenceSem2.cabsLibelle)"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrsemNote2; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_OBTENTION"; 
            externalType = VARCHAR2; 
            name = imrsemObtention; 
            valueClassName = NSString; 
            valueType = S; 
            width = 200; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_POINT_JURY"; 
            externalType = NUMBER; 
            name = imrsemPointJury; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrsemPoints1; 
            definition = "NVL(IMRSEM_POINTS1,0)"; 
            externalType = NUMBER; 
            isReadOnly = Y; 
            name = imrsemPoints1; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrsemPoints2; 
            definition = "NVL(IMRSEM_POINTS2,0)"; 
            externalType = NUMBER; 
            isReadOnly = Y; 
            name = imrsemPoints2; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_PONDERATION"; 
            externalType = NUMBER; 
            name = imrsemPonderation; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRSEM_PROMOTION"; 
            externalType = NUMBER; 
            name = imrsemPromotion; 
            precision = 6; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_ABSENCE1"; 
            name = imrueAbsence1; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_ABSENCE2"; 
            name = imrueAbsence2; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_BASE"; 
            externalType = NUMBER; 
            name = imrueBase; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrueBaseLibelle; 
            definition = "DECODE(NVL(to_char(imrueBase),' '),' ',' ','( / '||REPLACE(to_char(imrueBase,'990.99'),' ')||' - coef. '||to_char(imrueCoefficient,'90.99')||')')"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrueBaseLibelle; 
            valueClassName = NSString; 
            valueType = S; 
            width = 30; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrueBonification; 
            definition = "to_char('')"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrueBonification; 
            valueClassName = NSString; 
            valueType = S; 
            width = 200; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_COEFFICIENT"; 
            externalType = NUMBER; 
            name = imrueCoefficient; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_DISPENSE"; 
            externalType = NUMBER; 
            name = imrueDispense; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_ETAT"; 
            externalType = NUMBER; 
            name = imrueEtat; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrueLabel; 
            definition = "DECODE(imrueObtention,null,' ',' - ('||imrueObtention||')')"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrueLabel; 
            valueClassName = NSString; 
            valueType = S; 
            width = 205; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_MENTION1"; 
            externalType = NUMBER; 
            name = imrueMention1; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_MENTION2"; 
            externalType = NUMBER; 
            name = imrueMention2; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            definition = "toScolConstanteMentionUe1.cmenLibelle"; 
            externalType = VARCHAR2; 
            name = imrueMentionLibelle1; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            definition = "toScolConstanteMentionUe2.cmenLibelle"; 
            externalType = VARCHAR2; 
            name = imrueMentionLibelle2; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_MOYENNE1"; 
            externalType = NUMBER; 
            name = imrueMoyenne1; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_MOYENNE2"; 
            externalType = NUMBER; 
            name = imrueMoyenne2; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrueNote1; 
            definition = "DECODE(imrueAbsence1,0,DECODE(imrueDispense,4,'Equiv. '||to_char(imrueMoyenne1,'990.99'),5,'Equivalence',6,'V.A.E.',to_char(imrueMoyenne1,'990.99')),toScolConstanteAbsenceUe1.cabsLibelle)"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrueNote1; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            columnName = imrueNote2; 
            definition = "DECODE(imrueAbsence2,0,DECODE(imrueDispense,4,'Equiv. '||to_char(imrueMoyenne1,'990.99'),5,'Equivalence',6,'V.A.E.',to_char(imrueMoyenne2,'990.99')),toScolConstanteAbsenceUe2.cabsLibelle)"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = imrueNote2; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_OBTENTION"; 
            externalType = VARCHAR2; 
            name = imrueObtention; 
            valueClassName = NSString; 
            valueType = S; 
            width = 200; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_POINT_JURY"; 
            externalType = NUMBER; 
            name = imruePointJury; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imruePoints1; 
            definition = "NVL(IMRUE_POINTS1,0)"; 
            externalType = NUMBER; 
            isReadOnly = Y; 
            name = imruePoints1; 
            precision = 4; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imruePoints2; 
            definition = "NVL(IMRUE_POINTS2,0)"; 
            externalType = NUMBER; 
            isReadOnly = Y; 
            name = imruePoints2; 
            precision = 4; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = imruePointsUe; 
            definition = "to_number('0')"; 
            externalType = NUMBER; 
            isReadOnly = Y; 
            name = imruePointsUe; 
            precision = 4; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_PONDERATION"; 
            externalType = NUMBER; 
            name = imruePonderation; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IMRUE_PROMOTION"; 
            externalType = NUMBER; 
            name = imruePromotion; 
            precision = 5; 
            scale = 2; 
            valueClassName = NSDecimalNumber; 
            valueType = B; 
        }, 
        {
            allowsNull = Y; 
            columnName = "MEC_CODE"; 
            externalType = VARCHAR2; 
            name = mecCode; 
            valueClassName = NSString; 
            valueType = S; 
            width = 20; 
        }, 
        {
            allowsNull = Y; 
            columnName = "MEC_LIBELLE"; 
            externalType = VARCHAR2; 
            name = mecLibelle; 
            valueClassName = NSString; 
            valueType = S; 
            width = 250; 
        }, 
        {
            allowsNull = Y; 
            columnName = mparLibelle; 
            definition = "to_char('')"; 
            externalType = VARCHAR2; 
            isReadOnly = Y; 
            name = mparLibelle; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = N; 
            columnName = "MREC_KEY"; 
            externalType = NUMBER; 
            name = mrecKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "MRSEM_KEY"; 
            externalType = NUMBER; 
            name = mrsemKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "MRUE_KEY"; 
            externalType = NUMBER; 
            name = mrueKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = N; 
            columnName = "MSEM_KEY"; 
            externalType = NUMBER; 
            name = msemKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "MSEM_ORDRE"; 
            externalType = NUMBER; 
            name = msemOrdre; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = "MUE_CODE"; 
            externalType = VARCHAR2; 
            name = mueCode; 
            valueClassName = NSString; 
            valueType = S; 
            width = 15; 
        }, 
        {
            allowsNull = Y; 
            columnName = "MUE_LIBELLE"; 
            externalType = VARCHAR2; 
            name = mueLibelle; 
            valueClassName = NSString; 
            valueType = S; 
            width = 250; 
        }, 
        {
            allowsNull = Y; 
            columnName = "RANG_LIBELLE"; 
            externalType = VARCHAR2; 
            name = rangLibelle; 
            valueClassName = NSString; 
            valueType = S; 
            width = 100; 
        }, 
        {
            allowsNull = N; 
            columnName = "XRES_KEY"; 
            externalType = NUMBER; 
            name = xresKey; 
            valueClassName = NSNumber; 
            valueType = i; 
        }
    ); 
    className = EOGenericRecord; 
    classProperties = (
        adrCivilite, 
        adrNom, 
        adrPrenom, 
        etudNumero, 
        fannKey, 
        fspnKey, 
        idiplAnneeSuivie, 
        idiplNumero, 
        imcomLibelle, 
        imdivLibelle1, 
        imdivLibelle2, 
        imdivLibelle3, 
        imrecAbsence1, 
        imrecAbsence2, 
        imrecBase, 
        imrecBaseLibelle, 
        imrecCoefficient, 
        imrecDispense, 
        imrecEtat, 
        imrecLabel, 
        imrecMention1, 
        imrecMention2, 
        imrecMentionLibelle1, 
        imrecMentionLibelle2, 
        imrecMoyenne1, 
        imrecMoyenne2, 
        imrecNote1, 
        imrecNote2, 
        imrecObtention, 
        imrecPointJury, 
        imrecPoints1, 
        imrecPoints2, 
        imrecPonderation, 
        imrecPromotion, 
        imrsemAbsence1, 
        imrsemAbsence2, 
        imrsemBase, 
        imrsemBaseLibelle1, 
        imrsemBaseLibelle21, 
        imrsemBaseLibelle22, 
        imrsemBonification, 
        imrsemDispense, 
        imrsemEtat, 
        imrsemLabel, 
        imrsemMention1, 
        imrsemMention2, 
        imrsemMentionLibelle1, 
        imrsemMentionLibelle2, 
        imrsemMentionLibelleCourt1, 
        imrsemMentionLibelleCourt2, 
        imrsemMoyenne1, 
        imrsemMoyenne2, 
        imrsemNote1, 
        imrsemNote2, 
        imrsemObtention, 
        imrsemPointJury, 
        imrsemPoints1, 
        imrsemPoints2, 
        imrsemPonderation, 
        imrsemPromotion, 
        imrueAbsence1, 
        imrueAbsence2, 
        imrueBase, 
        imrueBaseLibelle, 
        imrueBonification, 
        imrueCoefficient, 
        imrueDispense, 
        imrueEtat, 
        imrueLabel, 
        imrueMention1, 
        imrueMention2, 
        imrueMentionLibelle1, 
        imrueMentionLibelle2, 
        imrueMoyenne1, 
        imrueMoyenne2, 
        imrueNote1, 
        imrueNote2, 
        imrueObtention, 
        imruePointJury, 
        imruePoints1, 
        imruePoints2, 
        imruePointsUe, 
        imruePonderation, 
        imruePromotion, 
        mecCode, 
        mecLibelle, 
        mparLibelle, 
        mrecKey, 
        mrsemKey, 
        mrueKey, 
        msemKey, 
        msemOrdre, 
        mueCode, 
        mueLibelle, 
        rangLibelle, 
        toScolConstanteAbsenceEc1, 
        toScolConstanteAbsenceEc2, 
        toScolConstanteAbsenceSem1, 
        toScolConstanteAbsenceSem2, 
        toScolConstanteAbsenceUe1, 
        toScolConstanteAbsenceUe2, 
        toScolConstanteDispenseEc, 
        toScolConstanteDispenseSem, 
        toScolConstanteDispenseUe, 
        toScolConstanteMentionEc1, 
        toScolConstanteMentionEc2, 
        toScolConstanteMentionSem1, 
        toScolConstanteMentionSem2, 
        toScolConstanteMentionUe1, 
        toScolConstanteMentionUe2, 
        toScolInscriptionEtudiant, 
        toScolMaquetteRepartitionSem, 
        toScolMaquetteRepartitionUe, 
        toScolMaquetteRepartitionUeX, 
        xresKey
    ); 
    externalName = "SCOLARITE.SCOL_EXPORTATION_RELEVES_SEM"; 
    fetchSpecificationDictionary = {}; 
    name = ScolExportationRelevesSem; 
    primaryKeyAttributes = (xresKey); 
    relationships = (
        {
            destination = ScolConstanteAbsence; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cabsKey; sourceAttribute = imrecAbsence1; }); 
            name = toScolConstanteAbsenceEc1; 
        }, 
        {
            destination = ScolConstanteAbsence; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cabsKey; sourceAttribute = imrecAbsence2; }); 
            name = toScolConstanteAbsenceEc2; 
        }, 
        {
            destination = ScolConstanteAbsence; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cabsKey; sourceAttribute = imrsemAbsence1; }); 
            name = toScolConstanteAbsenceSem1; 
        }, 
        {
            destination = ScolConstanteAbsence; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cabsKey; sourceAttribute = imrsemAbsence2; }); 
            name = toScolConstanteAbsenceSem2; 
        }, 
        {
            destination = ScolConstanteAbsence; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cabsKey; sourceAttribute = imrueAbsence1; }); 
            name = toScolConstanteAbsenceUe1; 
        }, 
        {
            destination = ScolConstanteAbsence; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cabsKey; sourceAttribute = imrueAbsence2; }); 
            name = toScolConstanteAbsenceUe2; 
        }, 
        {
            destination = ScolConstanteDispense; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cdisKey; sourceAttribute = imrecDispense; }); 
            name = toScolConstanteDispenseEc; 
        }, 
        {
            destination = ScolConstanteDispense; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cdisKey; sourceAttribute = imrsemDispense; }); 
            name = toScolConstanteDispenseSem; 
        }, 
        {
            destination = ScolConstanteDispense; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cdisKey; sourceAttribute = imrueDispense; }); 
            name = toScolConstanteDispenseUe; 
        }, 
        {
            destination = ScolConstanteMention; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cmenKey; sourceAttribute = imrecMention1; }); 
            name = toScolConstanteMentionEc1; 
        }, 
        {
            destination = ScolConstanteMention; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cmenKey; sourceAttribute = imrecMention2; }); 
            name = toScolConstanteMentionEc2; 
        }, 
        {
            destination = ScolConstanteMention; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cmenKey; sourceAttribute = imrsemMention1; }); 
            name = toScolConstanteMentionSem1; 
        }, 
        {
            destination = ScolConstanteMention; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cmenKey; sourceAttribute = imrsemMention2; }); 
            name = toScolConstanteMentionSem2; 
        }, 
        {
            destination = ScolConstanteMention; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cmenKey; sourceAttribute = imrueMention1; }); 
            name = toScolConstanteMentionUe1; 
        }, 
        {
            destination = ScolConstanteMention; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cmenKey; sourceAttribute = imrueMention2; }); 
            name = toScolConstanteMentionUe2; 
        }, 
        {
            destination = IpwScolInscriptionEtudiant; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = idiplNumero; sourceAttribute = idiplNumero; }); 
            name = toScolInscriptionEtudiant; 
        }, 
        {
            destination = ScolMaquetteRepartitionSem; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = mrsemKey; sourceAttribute = mrsemKey; }); 
            name = toScolMaquetteRepartitionSem; 
        }, 
        {
            destination = ScolMaquetteRepartitionUe; 
            joinSemantic = EOLeftOuterJoin; 
            joins = ({destinationAttribute = mrueKey; sourceAttribute = mrueKey; }); 
            name = toScolMaquetteRepartitionUe; 
        }, 
        {
            destination = ScolMaquetteRepartitionUeX; 
            joinSemantic = EOLeftOuterJoin; 
            joins = ({destinationAttribute = mruxKey; sourceAttribute = mrueKey; }); 
            name = toScolMaquetteRepartitionUeX; 
        }
    ); 
}
