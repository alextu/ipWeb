// Generated by the WOLips Templateengine Plug-in at 7 ao�t 2007 10:38:24

import com.webobjects.appserver.*;
import com.webobjects.eocontrol.EOGenericRecord;
import com.webobjects.foundation.NSArray;
import com.webobjects.foundation.NSLog;
import com.webobjects.foundation.NSNotification;
import com.webobjects.foundation.NSNotificationCenter;
import com.webobjects.foundation.NSSelector;
import com.webobjects.foundation.NSTimestamp;

import fr.univlr.cri.webapp.*;

public class Mod_datesIpDom extends CRIWebComponent {

    private static final int DIAL_AUCUN = 0, DIAL_CHANGE_DATE = 1;

    private int dialogueActuel;
    
    private DatesDomCtrlr monDatesDomCtrlr;

    public NSArray listeDom;	// liste des domaines LMD visibles par cet utilisateur...

    public EOGenericRecord lePSemDomCourant;	// var de parcours...
    public EOGenericRecord lePSemDomChoisi;	// le EO choisi dans le tableau de 2 lignes...
    
    public boolean aucunDomaineGere;
    
    private NSTimestamp dateDebut, dateFin;	// pour l'affichage puis la r�cup�ration...
    private String msgErreur;


    // ----------- CONSTRUCTEUR ------------
    public Mod_datesIpDom(WOContext context) {
    	super(context);

    	monDatesDomCtrlr = new DatesDomCtrlr((Session)session());
    	listeDom = monDatesDomCtrlr.listeDomainesVisibles();

    	if (listeDom != null && listeDom.count()>0) {
    		aucunDomaineGere = false;
//  		leDomChoisi = (EOGenericRecord)listeDom.objectAtIndex(0);	// Par d�faut on embraye sur le premier domaine trouv�...
    		voirDatesDomaine();						// pour lequel on charge les dates...
    	}
    	else // PB : aucun domaine g�r� pour cet utilisateur !!!
    		aucunDomaineGere = true;

        // s'enregistrer pour les notifs (chgt d'année en cours)
        NSNotificationCenter.defaultCenter().addObserver(this,	// on doit me prévenir moi-même !
        	new NSSelector("chgtAnnee",							// via cette méthode
        	new Class [] {NSNotification.class}),				// argument obligatoire !!!
        	"chgtAnneeEnCours",									// la signature de la notif qui me plait
			(Session)this.session());					// instance de celui qui la poste !
    
    }

    public String getDomaineChoisi() { return (String)monDatesDomCtrlr.getPopUpDACTDomaine().valeurDeCle("fdomLibelle"); }

    
    //  -----------------------------------------------------    
    //  ------------- Reponse aux notifications -------------
    //  -----------------------------------------------------    
    
    /// Un changement d'année vient d'avoir lieu...
    public void chgtAnnee(NSNotification laNotif) {
    	faireChgtDom();
    }
    

    
    //  --------------------------------------------------------    
    //  ---------------- Expr. conditionnelles -----------------
    //  --------------------------------------------------------    
    
    
    // Indiquer si un dialogue de modif est en cours...
    public boolean dialogueModifEnCours() {
	if (lePSemDomChoisi == null) return false;
	else return true;
    }
    
    // Pour n'afficher le d�tail que quand un dipl�me est choisi ...
//    public boolean isDomaineChoisi() {
//	return (leDomChoisi != null);
//    }

    // Indiquer si plus d'un domaine g�r� (sinon pas de choix � proposer !
    public boolean plusieursDomainesGeres() { return (listeDom != null && listeDom.count()>1); }
        
    // Indiquer si la parit� semestre parcouru actuellement est en modif...
    public boolean PsemCourantEnModif() {
	if (lePSemDomChoisi == null || lePSemDomChoisi != lePSemDomCourant) return false;
	if (dialogueActuel != DIAL_CHANGE_DATE) return false;
	return true;
    }
    
    
    // y a t'il un msg d'erreur � afficher ?
    public boolean erreurEnCours() {
        return (msgErreur != null);
    }

    
    //  --------------------------------------------------------    
    //  ---------------- Valeurs � afficher  -------------------
    //  --------------------------------------------------------    

    public PopUpDataAccessCtrlr getPopUpDACT() { 
	return monDatesDomCtrlr.getPopUpDACTDomaine(); 
    }
    
    public String getPariteSemestre() {
	int parite = ((Integer)lePSemDomCourant.valueForKey("ipSemestre")).intValue();
	if (parite == 0) return "Pairs";
	else return "Impairs";
    }

    public String getDateDebutIpDom() {
    	return (formatteDate(libDate("ipDatesDebutDom",lePSemDomCourant)));
    }

    public String getDateFinIpDom() {
    	return (formatteDate(libDate("ipDatesFinDom",lePSemDomCourant)));
    }
    
    
    // Formatage d'un NSTimestamp..
    private String formatteDate(NSTimestamp laDate) {
	if (laDate != null) return ((Session)session()).monApp.tsFormat(laDate);
	else return "Non définie";
    }
    
    // Lecture d'un champ date dans un EO...
    public NSTimestamp libDate(String nomChamp,EOGenericRecord lePSemDom) {
	try {
	    NSTimestamp dateBase = (NSTimestamp)lePSemDom.valueForKey(nomChamp);
	    if (dateBase != null)
		// retourner l'heure correcte (selon qu'elle ait �t� rentr�e � la mano via TOAD ou bien via l'appli...)
		return ((Session)session()).monApp.conversionDateBDD(dateBase, 0, 0);
	    else return null;
	}
	catch (Exception e) {
	    // Pb d'absence de la colonne de ce nom
	    NSLog.err.appendln("erreur "+e.getMessage());
	    return null;
	}
    }
    
    
    public String getMsgErreur() {
        return msgErreur;
    }
    
    
    //  --------------------------------------------------------    
    //  ---------------- Valeurs en E/S      -------------------
    //  --------------------------------------------------------    

    public NSTimestamp getContenuDateDebut() {
        return (dateDebut);
    }

    public void setContenuDateDebut(NSTimestamp newContenuDateDebut) {
	dateDebut = newContenuDateDebut;
    }

    public NSTimestamp getContenuDateFin() {
        return (dateFin);
    }

    public void setContenuDateFin(NSTimestamp newContenuDateFin) {
	dateFin = newContenuDateFin;
    }

    
    //  --------------------------------------------------------    
    //  ------------------------- ACTIONS ----------------------
    //  --------------------------------------------------------    
    
    // On veut s�lectionner un dipl�me... fetcher les d�tails � afficher
    public WOComponent voirDatesDomaine() {
    	faireChgtDom();
    	return null;
    }

    private void faireChgtDom() {
    	String domCode = (String)monDatesDomCtrlr.getPopUpDACTDomaine().valeurDeCle("fdomCode");
    	monDatesDomCtrlr.chargerDatesDom(domCode);
    	if (getListePSemDom() != null) {
    		lePSemDomChoisi = null;
    		dialogueActuel = DIAL_AUCUN;
    	}
    }
    
    public NSArray getListePSemDom() { return monDatesDomCtrlr.listePSemDom(); }
    
    
    // Dialogue � g�rer...
    
    public WOComponent ModifierDates() {
	lePSemDomChoisi = lePSemDomCourant;
	dateDebut = libDate("ipDatesDebutDom",lePSemDomChoisi);
	dateFin = libDate("ipDatesFinDom",lePSemDomChoisi);
	dialogueActuel = DIAL_CHANGE_DATE;
        return null;
    }

    // Je veux modifier les dates d'IP Web pour le dipl/sem en cours de modif...
    public WOComponent validerDates() {
	msgErreur = monDatesDomCtrlr.changerDatesIpPourSem(lePSemDomChoisi ,dateDebut, dateFin);
	if (msgErreur != null)
	    NSLog.err.appendln(msgErreur);
	else terminerToutDialogue();
	return null;
    }

    private void terminerToutDialogue() {
	lePSemDomChoisi = null;
	dialogueActuel = DIAL_AUCUN;
    }
    
    public WOComponent annulerModifsDates() {
	terminerToutDialogue();
        return null;
    }


}